/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.DungNgoc.UI;

import com.DungNgoc.DAO.HoaDonChiTietDAO;
import com.DungNgoc.DAO.HoaDonDAO;
import com.DungNgoc.DAO.KhachHangDAO;
import com.DungNgoc.DAO.KhuyenMaiDAO;
import com.DungNgoc.DAO.SanPhamDAO;
import com.DungNgoc.DAO.SanPhamTableDao;
import com.DungNgoc.entitys.HoaDon;
import com.DungNgoc.entitys.HoaDonChiTiet;
import com.DungNgoc.entitys.KhachHang;
import com.DungNgoc.entitys.MaKhuyenMai;
import com.DungNgoc.entitys.SanPhamTable;
import com.DungNgoc.untils.Auth;
import com.DungNgoc.untils.Exceptions;
import com.DungNgoc.untils.MsgBox;
import com.DungNgoc.untils.Xcheck;
import com.DungNgoc.untils.Xdate;
import com.DungNgoc.untils.Xmoney;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ThemHoaDon extends javax.swing.JDialog {

    int page = 0, soLuong = 0;
    int rowHD = -1;
    SanPhamTableDao sptbdao = new SanPhamTableDao();
    HoaDonDAO hdDao = new HoaDonDAO();
    SanPhamDAO spDAO = new SanPhamDAO();
    HoaDonChiTietDAO hdctDAO = new HoaDonChiTietDAO();
    KhachHangDAO khDAO = new KhachHangDAO();
    KhuyenMaiDAO kmDao = new KhuyenMaiDAO();
    DefaultTableModel modelSP;
    DefaultTableModel modelHoaDOn;
    List<SanPhamTable> listHD = new ArrayList<>();
    boolean isUpdate = false;
    double point = 0;
    double tong = 0.0;
    boolean check = true;

    /**
     * Creates new form ThemHoaDon
     */
    public ThemHoaDon(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        btnPrevPage = new javax.swing.JButton();
        btnNextPage = new javax.swing.JButton();
        lblPage = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtSDT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        txtNgayMua = new javax.swing.JTextField();
        txtNhanVien = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        chkDiem = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        btnThanhToan = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblThanhTien = new javax.swing.JLabel();
        btnChon = new javax.swing.JButton();
        lblKhuyenMai = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Tìm kiếm"));

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        btnPrevPage.setText("<<");
        btnPrevPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevPageActionPerformed(evt);
            }
        });

        btnNextPage.setText(">>");
        btnNextPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextPageActionPerformed(evt);
            }
        });

        lblPage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPage.setText("0");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnPrevPage)
                                .addGap(18, 18, 18)
                                .addComponent(lblPage)
                                .addGap(19, 19, 19)
                                .addComponent(btnNextPage)
                                .addGap(163, 163, 163)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnPrevPage)
                    .addComponent(btnNextPage)
                    .addComponent(lblPage))
                .addContainerGap())
        );

        tabs.addTab("Danh sách sản phẩm", jPanel2);

        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSDTKeyReleased(evt);
            }
        });

        jLabel1.setText("Số điện thoại");

        jLabel2.setText("Họ tên");

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        jLabel3.setText("Ngày mua");

        jLabel4.setText("Tên nhân viên");

        jLabel5.setText("Tổng tiền: ");

        lblTongTien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTongTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTongTien.setText("0 đ");
        lblTongTien.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel7.setText("Điểm thưởng: ");

        chkDiem.setText("0");
        chkDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDiemActionPerformed(evt);
            }
        });

        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel6.setText("Thành tiền: ");

        lblThanhTien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblThanhTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblThanhTien.setText("0 đ");

        btnChon.setText("Chọn mã");
        btnChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonActionPerformed(evt);
            }
        });

        lblKhuyenMai.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnChon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnXoa)
                                .addGap(18, 18, 18)
                                .addComponent(btnThanhToan))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSDT)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNgayMua, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                            .addComponent(txtNhanVien)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtNgayMua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblKhuyenMai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(btnChon)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDiem)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan))
                .addContainerGap())
        );

        tabs.addTab("Hoá đơn chi tiết", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        fillTableSanPham();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnPrevPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevPageActionPerformed
        // TODO add your handling code here:
        prevPage();
    }//GEN-LAST:event_btnPrevPageActionPerformed

    private void btnNextPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextPageActionPerformed
        // TODO add your handling code here:
        nextPage();
    }//GEN-LAST:event_btnNextPageActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        them(tblSanPham.getSelectedRow());
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblSanPhamMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseReleased
        // TODO add your handling code here:
        if (tblSanPham.getSelectedRowCount() == 0) {
            btnThem.setEnabled(false);
        } else {
            btnThem.setEnabled(true);
        }
    }//GEN-LAST:event_tblSanPhamMouseReleased

    private void txtSDTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyReleased
        // TODO add your handling code here:
        fillKhachHang();
    }//GEN-LAST:event_txtSDTKeyReleased

    private void chkDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDiemActionPerformed
        // TODO add your handling code here:
        thanhTien(tong);
    }//GEN-LAST:event_chkDiemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        xoa(tblHoaDon.getSelectedRow());
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        thanhToan();
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void tblHoaDonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseReleased
        // TODO add your handling code here:
        if (tblHoaDon.getSelectedRowCount() == 0) {
            btnThanhToan.setEnabled(false);
            btnXoa.setEnabled(false);
        } else {
            btnThanhToan.setEnabled(true);
            btnXoa.setEnabled(true);
        }
    }//GEN-LAST:event_tblHoaDonMouseReleased

    private void btnChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonActionPerformed
        // TODO add your handling code here:
        new ChonKhuyenMai(null, true).setVisible(true);
        lblKhuyenMai.setText(ChonKhuyenMai.promocode);
        thanhTien(tong);
    }//GEN-LAST:event_btnChonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ThemHoaDon dialog = new ThemHoaDon(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    void init() {
        setLocationRelativeTo(null);
        setTitle("Hoá đơn chi tiết");
        prepareDanhSachGUI();
        fillTableSanPham();
        prepareHoaDonGUI();
        lblKhuyenMai.setText("None");
        tabs.setSelectedIndex(1);
        updateStatus();
        txtNhanVien.setEditable(false);
        txtNhanVien.setText(Auth.user.getName());
    }

    void prepareDanhSachGUI() {
        btnThem.setEnabled(false);
        String h[] = {"Mã máy", "Tên máy", "Ram", "Dung Luọng", "Màu sắc", "Tình trạng", "Giá", "Số lượng"};
        modelSP = new DefaultTableModel(h, 0) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }

        };
        tblSanPham.setModel(modelSP);
        tblSanPham.setSelectionMode(0);
    }

    void nextPage() {
        page++;
        fillTableSanPham();
    }

    void prevPage() {
        page--;
        fillTableSanPham();
    }

    void updatePage(List<SanPhamTable> list) {
        boolean next = list.size() == 21;
        boolean prev = page != 0;
        btnPrevPage.setEnabled(prev);
        btnNextPage.setEnabled(next);
        lblPage.setText(page + 1 + "");
    }

    void fillTableSanPham() {
        modelSP.setRowCount(0);
        try {
            List<SanPhamTable> list = sptbdao.selectByKeyWord(txtTimKiem.getText(), page);
            if (list.size() != 21) {
                for (SanPhamTable x : list) {
                    modelSP.addRow(new Object[]{x.getMa(), x.getTen(), x.getRam(), x.getDungLuong(), x.getMau(), x.isTinhTrang() ? "Mới" : "Cũ", Xmoney.moneyToString(x.getGia()), x.getSoLuong()});
                }
            } else {
                for (int i = 0; i < 20; i++) {
                    SanPhamTable x = list.get(i);
                    modelSP.addRow(new Object[]{x.getMa(), x.getTen(), x.getRam(), x.getDungLuong(), x.getMau(), x.isTinhTrang() ? "Mới" : "Cũ", Xmoney.moneyToString(x.getGia()), x.getSoLuong()});
                }
            }
            updatePage(list);
        } catch (Exception e) {
            Exceptions.writeException(e, "");
        }
    }

    void prepareHoaDonGUI() {
        txtNgayMua.setEditable(false);
        txtNgayMua.setText(Xdate.toString(new Date(), "dd-MM-yyyy"));
        String h[] = {"Mã máy", "Tên máy", "Ram", "Dung Luọng", "Màu sắc", "Tình trạng", "Giá", "Số lượng"};
        modelHoaDOn = new DefaultTableModel(h, 0) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }

        };
        tblHoaDon.setModel(modelHoaDOn);
        tblHoaDon.setSelectionMode(0);
    }

    void fillTableHD() {
        modelHoaDOn.setRowCount(0);
        for (SanPhamTable x : listHD) {
            modelHoaDOn.addRow(new Object[]{x.getMa(), x.getTen(), x.getRam(), x.getDungLuong(), x.getMau(), x.isTinhTrang() ? "Mới" : "Cũ", Xmoney.moneyToString(x.getGia()), x.getSoLuong()});
        }
        updateStatus();
        tongTien();
    }

    void updateStatus() {
        boolean thanhToan = listHD.isEmpty();
        btnThanhToan.setEnabled(!thanhToan);
    }

    void them(int row) {
        SanPhamTable sp = sptbdao.selectById(tblSanPham.getValueAt(row, 0) + "");
        String a = MsgBox.promt(this, "Nhập số lượng:");
        if (checkSoLuong(a, row)) {
            int soLuong = Integer.parseInt(a);
            if (contain(sp.getMa())) {
                int index = indexOfContain(sp.getMa());
                int tongSo = soLuong + listHD.get(index).getSoLuong();
                if (tongSo <= Integer.parseInt(tblSanPham.getValueAt(row, 7) + "")) {
                    sp.setSoLuong(tongSo);
                    listHD.set(index, sp);
                    tabs.setSelectedIndex(1);
                } else {
                    MsgBox.alert(this, "Không đủ số lượng");
                }
            } else {
                sp.setSoLuong(soLuong);
                listHD.add(sp);
                tabs.setSelectedIndex(1);
            }
        }
        fillTableHD();
    }

    boolean checkSoLuong(String a, int row) {
        try {
            int soLuong = Integer.parseInt(a);
            double b = Double.parseDouble(a);
            if (soLuong <= 0) {
                MsgBox.alert(this, "Số lượng phải lớn hơn 0");
                return false;
            } else if (b != soLuong) {
                MsgBox.alert(this, "Số lượng Phải là số nguyên");
                return false;
            } else if (soLuong > Integer.parseInt(tblSanPham.getValueAt(row, 7) + "")) {
                MsgBox.alert(this, "Số lượng không đủ");
                return false;
            } else {
                return true;
            }
        } catch (Exception e) {
            MsgBox.alert(this, "SỐ lượng phải là số nguyên");
            return false;
        }
    }

    boolean contain(String ma) {
        int i = 0;
        for (SanPhamTable x : listHD) {
            if (x.getMa().equals(ma)) {
                i++;
            }
        }
        return i != 0;
    }

    int indexOfContain(String ma) {
        int i = 0;
        for (SanPhamTable x : listHD) {
            if (x.getMa().equals(ma)) {
                i = listHD.indexOf(x);
            }
        }
        return i;
    }

    void fillKhachHang() {
        KhachHang kh = khDAO.select(txtSDT.getText());
        if (kh != null) {
            txtHoTen.setText(kh.getName());
            chkDiem.setText(kh.getPoint() + "");
            txtHoTen.setEditable(false);
            isUpdate = true;
            chkDiem.setEnabled(true);
        } else {
            txtHoTen.setText("");
            txtHoTen.setEditable(true);
            chkDiem.setText("0");
            isUpdate = false;
            chkDiem.setEnabled(false);
        }
    }

    void tongTien() {
        tong = 0;
        for (SanPhamTable x : listHD) {
            tong += (Double.parseDouble(x.getSoLuong() + "") * Double.parseDouble(x.getGia() + ""));
        }
        lblTongTien.setText(Xmoney.moneyToString(tong));
        thanhTien(tong);
    }

    void thanhTien(double tong) {
        double diem = Double.parseDouble(chkDiem.getText());
        double thanhTien = 0;
        if (chkDiem.isSelected()) {
            if (diem * 1000 <= tong) {
                thanhTien = tong - diem * 1000.0;
                point = 0;
            } else {
                thanhTien = 0;
                point = diem - (0.001 * tong) / 100;
            }
        } else {
            thanhTien = tong;
            point = 0.001 * tong / 100 + diem;
        }
        MaKhuyenMai km = kmDao.selectById(lblKhuyenMai.getText());
        thanhTien = (100 - km.getValue()) * thanhTien / 100;
        lblThanhTien.setText(Xmoney.moneyToString(thanhTien));
    }

    void xoa(int row) {
        listHD.remove(row);
        fillTableHD();
    }

    void thanhToan() {
        //thêm sửa khách hàng
        khachHang();
        //thêm hoá đơn
        if (check == true) {
            hoaDon();
            //thêm hoá đơn chi tiết
            hoaDonChiTiet();
            //sửa thông tin sản phẩm
            sanPham();
            //xuất hoá đơn
            xuatHoaDon("HD" + hdDao.selectId() + "_" + Xdate.toString(new Date(), "yyMMdd"));
            //đóng form
            dispose();
        }
    }

    void khachHang() {
        if (isUpdate) {
            KhachHang kh = khDAO.selectById(txtSDT.getText().trim());
            kh.setPoint(point);
            kh.setTotalMoney(tong);
            try {
                khDAO.update2(kh);
            } catch (Exception e) {
                Exceptions.writeException(e, kh.toString());
            }
        } else {
            if (checkKhachHang()) {
                KhachHang kh = new KhachHang(txtSDT.getText().trim(), txtHoTen.getText().trim(), tong, point, true);
                try {
                    khDAO.insert(kh);
                } catch (Exception e) {
                    Exceptions.writeException(e, kh.toString());
                }
            }
        }
    }

    boolean checkKhachHang() {
        if (!Xcheck.isSDT(txtSDT.getText().trim())) {
            MsgBox.alert(this, "Số điện thoại không đúng");
            check = false;
            return false;
        } else if (txtHoTen.getText().trim().equals("")) {
            MsgBox.alert(this, "Không bỏ trống tên");
            check = false;
            return false;
        } else if (Xcheck.isNotName(txtHoTen.getText())) {
            MsgBox.alert(this, "Tên chỉ chứa chữ cái và khoảng trắng");
            check = false;
            return false;
        } else {
            check = true;
            return true;
        }
    }

    void hoaDon() {
        String maKM = lblKhuyenMai.getText();
        HoaDon hd = new HoaDon(0, txtSDT.getText(), Xdate.toString(new Date(), "yyyy-MM-dd"), tong + "", maKM, chkDiem.isSelected(), Auth.user.getIdStaff());
        try {
            hdDao.insert(hd);
        } catch (Exception e) {
            Exceptions.writeException(e, hd.toString());
        }
    }

    void hoaDonChiTiet() {
        for (SanPhamTable x : listHD) {
            HoaDonChiTiet hdct = new HoaDonChiTiet(hdDao.selectId(), x.getMa(), x.getSoLuong(), x.getGia());
            try {
                hdctDAO.insert(hdct);
            } catch (Exception e) {
                Exceptions.writeException(e, hdct.toString());
            }
        }
        MsgBox.alert(this, "Thêm thành công");
    }

    void sanPham() {
        for (SanPhamTable x : listHD) {
            spDAO.updateSL(x.getMa(), x.getSoLuong());
        }
    }

    void xuatHoaDon(String name) {
        try {
            BaseFont bf = BaseFont.createFont("c:\\windows\\fonts\\times.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            //khởi tạo dc
            Document dc = new Document();
            //tạo font tiếng việt
            Font header = new Font(bf, 40, Font.BOLD, BaseColor.BLUE);//header
            Font headerTB = new Font(bf, 14, Font.BOLD, BaseColor.BLACK);//headertbale
            Font tiny = new Font(bf, 10, Font.UNDERLINE, BaseColor.GRAY);
            Font text = new Font(bf, 14, Font.NORMAL, BaseColor.BLACK);//normal text
            Font textTB = new Font(bf, 12, Font.NORMAL, BaseColor.BLACK);//normal text table
            PdfWriter.getInstance(dc, new FileOutputStream("hoaDon/" + name + ".pdf"));
            dc.open();
            //nội dung
            Paragraph[] p = new Paragraph[7];
            p[0] = new Paragraph("Dũng Ngọc Mobile", header);
            p[0].setAlignment(Element.ALIGN_CENTER);
            p[0].setSpacingBefore(12);
            p[1] = new Paragraph("HOÁ ĐƠN BÁN HÀNG", tiny);
            p[1].setAlignment(Element.ALIGN_CENTER);
            p[1].setSpacingBefore(5);
            p[2] = new Paragraph("Số điện thoại: " + txtSDT.getText(), text);
            p[2].setAlignment(Element.ALIGN_LEFT);
            p[3] = new Paragraph("Tên khách hàng: " + txtHoTen.getText(), text);
            p[3].setAlignment(Element.ALIGN_LEFT);
            p[4] = new Paragraph("Ngày mua hàng: " + Xdate.toString(new Date(), "dd/MM/yyyy"), text);
            p[4].setAlignment(Element.ALIGN_LEFT);
            p[5] = new Paragraph("Họ tên nhân viên: " + txtNhanVien.getText(), text);
            p[5].setAlignment(Element.ALIGN_LEFT);
            p[6] = new Paragraph("Danh sách sản phẩm: ", text);
            p[6].setAlignment(Element.ALIGN_LEFT);
            p[6].setSpacingAfter(20);
            //add nội dung
            for (int i = 0; i < 7; i++) {
                dc.add(p[i]);
            }
            //table
            //Khởi tạo một table có 3 cột
            PdfPTable table = new PdfPTable(8);
            //Khởi tạo ô header và thêm vào table
            String h[] = {"Mã máy", "Tên máy", "Ram", "Dung Luọng", "Màu", "Tình trạng", "Giá", "Số lượng"};
            PdfPCell title[] = new PdfPCell[8];
            for (int i = 0; i < 8; i++) {
                title[i] = new PdfPCell(new Paragraph(h[i], headerTB));
                title[i].setPaddingLeft(2.0f);
                table.addCell(title[i]);
            }
            //Khởi tạo  ô data và thêm vào bảng
            for (int i = 0; i < tblHoaDon.getRowCount(); i++) {
                for (int j = 0; j < 8; j++) {
                    PdfPCell data = new PdfPCell(new Paragraph(tblHoaDon.getValueAt(i, j) + "", textTB));
                    table.addCell(data);
                }
            }
            float[] withsKM = {1.2f, 2.3f, 0.8f, 1.7f, 1f, 1.6f, 1.6f, 1.3f};
            table.setWidths(withsKM);
            table.setWidthPercentage(100);
            dc.add(table);
            //thêm nội dung tiền
            Paragraph[] pp = new Paragraph[5];
            p[0] = new Paragraph("Tổng tiền: " + lblTongTien.getText(), text);
            p[1] = new Paragraph("Mã giảm giá: " + lblKhuyenMai.getText(), text);
            p[2] = new Paragraph("Điểm thưởng: " + (chkDiem.isSelected() ? chkDiem.getText() : "0"), text);
            p[3] = new Paragraph("----------------------------------------------");
            p[4] = new Paragraph("Thành tiền: " + lblThanhTien.getText(), text);
            for (int i = 0; i < 5; i++) {
                p[i].setAlignment(Element.ALIGN_RIGHT);
                dc.add(p[i]);
            }
            //đóng file
            dc.close();
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChon;
    private javax.swing.JButton btnNextPage;
    private javax.swing.JButton btnPrevPage;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JCheckBox chkDiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblKhuyenMai;
    private javax.swing.JLabel lblPage;
    private javax.swing.JLabel lblThanhTien;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtNgayMua;
    private javax.swing.JTextField txtNhanVien;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
