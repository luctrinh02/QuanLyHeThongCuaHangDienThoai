/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.DungNgoc.UI;

import com.DungNgoc.DAO.NhanVienDAO;
import com.DungNgoc.entitys.NhanVien;
import com.DungNgoc.untils.Auth;
import com.DungNgoc.untils.MsgBox;
import com.DungNgoc.untils.XpassWord;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JTextField;

/**
 *
 * @author lenonvo
 */
public class DoiMatKhau extends javax.swing.JDialog {

    /**
     * Creates new form DoiMatKhau
     */
    public DoiMatKhau(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setUndecorated(true);
        initComponents();
        init();
    }
    public void init(){
        setLocationRelativeTo(null);
        addPlaceHolderStyle(txtMatKhauMoi);
        addPlaceHolderStyle(txtXacNhan);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        doiMatKhauFrame = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnDoiMatKhau = new javax.swing.JButton();
        txtMatKhauMoi = new javax.swing.JPasswordField();
        txtMatKhauCu = new javax.swing.JPasswordField();
        txtXacNhan = new javax.swing.JPasswordField();
        btnDoiMatKhau1 = new javax.swing.JButton();

        javax.swing.GroupLayout doiMatKhauFrameLayout = new javax.swing.GroupLayout(doiMatKhauFrame.getContentPane());
        doiMatKhauFrame.getContentPane().setLayout(doiMatKhauFrameLayout);
        doiMatKhauFrameLayout.setHorizontalGroup(
            doiMatKhauFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        doiMatKhauFrameLayout.setVerticalGroup(
            doiMatKhauFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(92, 192, 194));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Ngọc Dũng ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Mobile");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Phần mềm quản lý cửa hàng điện thoại");

        btnDoiMatKhau.setText("Đổi mật khẩu");
        btnDoiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiMatKhauActionPerformed(evt);
            }
        });

        txtMatKhauMoi.setText("Mật khẩu mới");
        txtMatKhauMoi.setEchoChar('\u0000');
        txtMatKhauMoi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauMoiFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMatKhauMoiFocusLost(evt);
            }
        });

        txtMatKhauCu.setText("Mật khẩu cũ");
        txtMatKhauCu.setEchoChar('\u0000');
        txtMatKhauCu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauCuFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMatKhauCuFocusLost(evt);
            }
        });

        txtXacNhan.setText("Xác nhận mật khẩu");
        txtXacNhan.setEchoChar('\u0000');
        txtXacNhan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtXacNhanFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtXacNhanFocusLost(evt);
            }
        });

        btnDoiMatKhau1.setText("Thoát");
        btnDoiMatKhau1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiMatKhau1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addComponent(txtMatKhauMoi)
                            .addComponent(txtMatKhauCu)
                            .addComponent(txtXacNhan, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(btnDoiMatKhau)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDoiMatKhau1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addComponent(txtMatKhauCu, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtMatKhauMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDoiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDoiMatKhau1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMatKhauCuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauCuFocusGained
        // TODO add your handling code here:
        String matKhau=new String(txtMatKhauCu.getPassword());
        if(matKhau.equals("Mật khẩu cũ")){
            txtMatKhauCu.setText("");
            txtMatKhauCu.setEchoChar('*');
            txtMatKhauCu.requestFocus();
            removePlaceHolderStyle(txtMatKhauCu);
        }
    }//GEN-LAST:event_txtMatKhauCuFocusGained

    private void txtMatKhauCuFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauCuFocusLost
        // TODO add your handling code here:
        String matKhau=new String(txtMatKhauCu.getPassword());
        if(matKhau.length()==0){
            txtMatKhauCu.setText("Mật khẩu cũ");
            txtMatKhauCu.setEchoChar('\u0000');
            addPlaceHolderStyle(txtMatKhauCu);
        }
    }//GEN-LAST:event_txtMatKhauCuFocusLost

    private void txtMatKhauMoiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauMoiFocusGained
        // TODO add your handling code here:
        String matKhau=new String(txtMatKhauMoi.getPassword());
        if(matKhau.equals("Mật khẩu mới")){
            txtMatKhauMoi.setText("");
            txtMatKhauMoi.setEchoChar('*');
            txtMatKhauMoi.requestFocus();
            removePlaceHolderStyle(txtMatKhauMoi);
        }
    }//GEN-LAST:event_txtMatKhauMoiFocusGained

    private void txtMatKhauMoiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauMoiFocusLost
        // TODO add your handling code here:
        String matKhau=new String(txtMatKhauMoi.getPassword());
        if(matKhau.length()==0){
            txtMatKhauMoi.setText("Mật khẩu mới");
            txtMatKhauMoi.setEchoChar('\u0000');
            addPlaceHolderStyle(txtMatKhauMoi);
        }
    }//GEN-LAST:event_txtMatKhauMoiFocusLost

    private void txtXacNhanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtXacNhanFocusGained
        // TODO add your handling code here:
        String matKhau=new String(txtXacNhan.getPassword());
        if(matKhau.equals("Xác nhận mật khẩu")){
            txtXacNhan.setText("");
            txtXacNhan.setEchoChar('*');
            txtXacNhan.requestFocus();
            removePlaceHolderStyle(txtXacNhan);
        }
    }//GEN-LAST:event_txtXacNhanFocusGained

    private void txtXacNhanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtXacNhanFocusLost
        // TODO add your handling code here:
        String matKhau=new String(txtXacNhan.getPassword());
        if(matKhau.length()==0){
            txtXacNhan.setText("Xác nhận mật khẩu");
            txtXacNhan.setEchoChar('\u0000');
            addPlaceHolderStyle(txtXacNhan);
        }
    }//GEN-LAST:event_txtXacNhanFocusLost

    private void btnDoiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiMatKhauActionPerformed
        // TODO add your handling code here:
        doiMatKhau();
    }//GEN-LAST:event_btnDoiMatKhauActionPerformed

    private void btnDoiMatKhau1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiMatKhau1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnDoiMatKhau1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoiMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoiMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoiMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoiMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DoiMatKhau dialog = new DoiMatKhau(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void addPlaceHolderStyle(JTextField textField) {
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN);
        textField.setFont(font);
        textField.setForeground(new Color(204, 204, 255));
    }

    public void removePlaceHolderStyle(JTextField textField) {
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN);
        textField.setFont(font);
        textField.setForeground(Color.BLACK);
    }
    public boolean validateForm(){
        String matKhauCu=new String(txtMatKhauCu.getPassword());
        String matKhauMoi=new String(txtMatKhauMoi.getPassword());
        String xacNhan=new String(txtXacNhan.getPassword());
        if(matKhauCu.length()==0 || matKhauMoi.length()==0 || xacNhan.length()==0){
            MsgBox.alert(this, "Không bỏ trống!");
            return false;
        }else if(XpassWord.isCompareToHash(matKhauMoi, Auth.user)){
            MsgBox.alert(this, "Mật khẩu cũ sai");
            return false;
        }else if(matKhauMoi.length()<6 || matKhauMoi.length()>18){
            MsgBox.alert(this, "Mật khẩu có từ 6 - 18 ký tự");
            return false;
        }else if(!xacNhan.equals(matKhauMoi)){
            MsgBox.alert(this, "Xác nhận mật khẩu không chính xác");
            return false;
        }else{
            return true;
        }
    }
    public void dangXuat(){
        Auth.clear();
        new DangNhap(doiMatKhauFrame, true).setVisible(true);
        dispose();
    }
    public void doiMatKhau(){
        if(validateForm()){
            String matKhauMoi=new String(txtMatKhauMoi.getPassword()); 
            NhanVien tam=Auth.user;
            NhanVienDAO dao=new NhanVienDAO();
            String[] saltHash=new String[2];
            saltHash=XpassWord.passToHash(matKhauMoi);
            tam.setSalt(saltHash[0]);
            tam.setHash(saltHash[1]);
            try {
                dao.update(tam);
                MsgBox.alert(this, "Đổi mật khẩu thành công");
                dangXuat();
            } catch (Exception e) {
                MsgBox.alert(this, "Đổi mật khẩu thất bại");
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoiMatKhau;
    private javax.swing.JButton btnDoiMatKhau1;
    private javax.swing.JFrame doiMatKhauFrame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txtMatKhauCu;
    private javax.swing.JPasswordField txtMatKhauMoi;
    private javax.swing.JPasswordField txtXacNhan;
    // End of variables declaration//GEN-END:variables
}
